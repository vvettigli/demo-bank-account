// Generated by delombok at Thu Jan 05 09:42:45 CET 2023
package contocorrente.conto.entities;

import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@Table(name = "conti")
public class Conto {
    @Id
    @NotNull
    @Column(name = "contoid")
    private Integer id;
    @ManyToOne
    @JoinColumn(name = "userid")
    private Users user;
    @Column(name = "saldo")
    @NotNull(message = "inserire il saldo")
    private Double saldo;
    @JsonManagedReference
    @OneToMany(mappedBy = "conto", fetch = FetchType.LAZY)
    private Set<Operation> operation;


    @java.lang.SuppressWarnings("all")
    public static abstract class ContoBuilder<C extends Conto, B extends Conto.ContoBuilder<C, B>> {
        @java.lang.SuppressWarnings("all")
        private Integer id;
        @java.lang.SuppressWarnings("all")
        private Users user;
        @java.lang.SuppressWarnings("all")
        private Double saldo;
        @java.lang.SuppressWarnings("all")
        private Set<Operation> operation;

        @java.lang.SuppressWarnings("all")
        protected abstract B self();

        @java.lang.SuppressWarnings("all")
        public abstract C build();

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B id(@NotNull final Integer id) {
            this.id = id;
            return self();
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B user(final Users user) {
            this.user = user;
            return self();
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B saldo(@NotNull(message = "inserire il saldo") final Double saldo) {
            this.saldo = saldo;
            return self();
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B operation(final Set<Operation> operation) {
            this.operation = operation;
            return self();
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "Conto.ContoBuilder(id=" + this.id + ", user=" + this.user + ", saldo=" + this.saldo + ", operation=" + this.operation + ")";
        }
    }


    @java.lang.SuppressWarnings("all")
    private static final class ContoBuilderImpl extends Conto.ContoBuilder<Conto, Conto.ContoBuilderImpl> {
        @java.lang.SuppressWarnings("all")
        private ContoBuilderImpl() {
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        protected Conto.ContoBuilderImpl self() {
            return this;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public Conto build() {
            return new Conto(this);
        }
    }

    @java.lang.SuppressWarnings("all")
    protected Conto(final Conto.ContoBuilder<?, ?> b) {
        this.id = b.id;
        this.user = b.user;
        this.saldo = b.saldo;
        this.operation = b.operation;
    }

    @java.lang.SuppressWarnings("all")
    public static Conto.ContoBuilder<?, ?> builder() {
        return new Conto.ContoBuilderImpl();
    }

    @java.lang.SuppressWarnings("all")
    public void setId(@NotNull final Integer id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    public void setUser(final Users user) {
        this.user = user;
    }

    @java.lang.SuppressWarnings("all")
    public void setSaldo(@NotNull(message = "inserire il saldo") final Double saldo) {
        this.saldo = saldo;
    }

    @java.lang.SuppressWarnings("all")
    public void setOperation(final Set<Operation> operation) {
        this.operation = operation;
    }

    @NotNull
    @java.lang.SuppressWarnings("all")
    public Integer getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    public Users getUser() {
        return this.user;
    }

    @NotNull(message = "inserire il saldo")
    @java.lang.SuppressWarnings("all")
    public Double getSaldo() {
        return this.saldo;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Operation> getOperation() {
        return this.operation;
    }

    @java.lang.SuppressWarnings("all")
    public Conto(@NotNull final Integer id, final Users user, @NotNull(message = "inserire il saldo") final Double saldo, final Set<Operation> operation) {
        this.id = id;
        this.user = user;
        this.saldo = saldo;
        this.operation = operation;
    }

    @java.lang.SuppressWarnings("all")
    public Conto() {
    }
}

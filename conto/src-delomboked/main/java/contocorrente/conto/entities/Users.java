// Generated by delombok at Thu Jan 05 09:42:45 CET 2023
package contocorrente.conto.entities;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Builder;

@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Entity
@Table(name = "users", schema = "public")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
public class Users {
    @Id
    @NotNull
    @Column(name = "userid")
    private Integer id;
    @NotEmpty
    @NotNull
    @NotBlank
    @Column(name = "username")
    private String userName;
    @NotEmpty
    @NotNull
    @NotBlank
    @Column(name = "password")
    private String password;


    @java.lang.SuppressWarnings("all")
    public static abstract class UsersBuilder<C extends Users, B extends Users.UsersBuilder<C, B>> {
        @java.lang.SuppressWarnings("all")
        private Integer id;
        @java.lang.SuppressWarnings("all")
        private String userName;
        @java.lang.SuppressWarnings("all")
        private String password;

        @java.lang.SuppressWarnings("all")
        protected abstract B self();

        @java.lang.SuppressWarnings("all")
        public abstract C build();

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B id(@NotNull final Integer id) {
            this.id = id;
            return self();
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B userName(@NotNull final String userName) {
            this.userName = userName;
            return self();
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public B password(@NotNull final String password) {
            this.password = password;
            return self();
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "Users.UsersBuilder(id=" + this.id + ", userName=" + this.userName + ", password=" + this.password + ")";
        }
    }


    @java.lang.SuppressWarnings("all")
    private static final class UsersBuilderImpl extends Users.UsersBuilder<Users, Users.UsersBuilderImpl> {
        @java.lang.SuppressWarnings("all")
        private UsersBuilderImpl() {
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        protected Users.UsersBuilderImpl self() {
            return this;
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public Users build() {
            return new Users(this);
        }
    }

    @java.lang.SuppressWarnings("all")
    protected Users(final Users.UsersBuilder<?, ?> b) {
        this.id = b.id;
        this.userName = b.userName;
        this.password = b.password;
    }

    @java.lang.SuppressWarnings("all")
    public static Users.UsersBuilder<?, ?> builder() {
        return new Users.UsersBuilderImpl();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "Users(id=" + this.getId() + ", userName=" + this.getUserName() + ", password=" + this.getPassword() + ")";
    }

    @java.lang.SuppressWarnings("all")
    public void setId(@NotNull final Integer id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    public void setUserName(@NotNull final String userName) {
        this.userName = userName;
    }

    @java.lang.SuppressWarnings("all")
    public void setPassword(@NotNull final String password) {
        this.password = password;
    }

    @NotNull
    @java.lang.SuppressWarnings("all")
    public Integer getId() {
        return this.id;
    }

    @NotNull
    @java.lang.SuppressWarnings("all")
    public String getUserName() {
        return this.userName;
    }

    @NotNull
    @java.lang.SuppressWarnings("all")
    public String getPassword() {
        return this.password;
    }

    @java.lang.SuppressWarnings("all")
    public Users(@NotNull final Integer id, @NotNull final String userName, @NotNull final String password) {
        this.id = id;
        this.userName = userName;
        this.password = password;
    }

    @java.lang.SuppressWarnings("all")
    public Users() {
    }
}
